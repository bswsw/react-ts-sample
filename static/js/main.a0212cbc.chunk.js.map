{"version":3,"sources":["logo.svg","components/Home.tsx","components/HelloWorld.tsx","components/JSX.tsx","components/LiftingStateComponent.tsx","components/ReactComponentClass.tsx","components/CommentComponent.tsx","components/StateAndLifecycleComponent.tsx","components/EventComponent.tsx","components/ConditionalRenderingComponent.tsx","components/ListAndKeyComponent.tsx","components/FormComponent.tsx","components/CompositionVsInheritanceComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Home","React","Component","HelloWorld","JSX","user","className","firstName","lastName","formatName","getGreeting","TemperatureScale","Welcome","this","props","name","ReactComponentClass","Avatar","src","avatarUrl","alt","UserInfo","Comment","author","text","date","toLocaleDateString","CommentComponent","Date","FormattedDate","toLocaleTimeString","Clock","timerId","state","setInterval","tick","clearInterval","setState","StateAndLifecycleComponent","LoggingButton","handleClick","console","log","onClick","handleClick2","Toggle","isToggleOn","bind","EventComponent","WarningBanner","warn","Mailbox","unreadMessages","length","UserGreeting","GuestGreeting","Greeting","isLoggedIn","component","LoginButton","LogoutButton","LoginControl","handleLogoutClick","button","handleLoginClick","ConditionalRenderingComponent","isWarn","Math","floor","random","Post","key","id","title","content","Blog","sidebar","posts","map","post","contents","NumberListItem","value","NumberList","numbers","number","toString","ListAndKeyComponent","Reservation","handleInputChange","event","target","type","checked","isGoing","numberOfGuests","onChange","FlavorForm","handleChangeMultiple","handleSubmit","alert","preventDefault","multipleValues","handleChange","onSubmit","multiple","FormComponent","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","round","TemperatureInput","e","onTemperatureChange","scale","BoilingVerdict","Calculator","handleCelsiusChange","handleFahrenheitChange","LiftingStateComponent","SplitPane","left","right","Contract","Chat","Pane","FancyBoard","color","children","WelcomeDialog","Dialog","message","SignUpDialog","login","handleSignUp","disabled","CompositionVsInheritanceComponent","App","menus","path","basename","process","logo","menu","to","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a0212cbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <h1>Home</h1>\n    )\n  }\n}\n","import React from \"react\";\n\nexport default function HelloWorld() {\n  return <h1>Hello, world!</h1>\n}\n","import React from \"react\";\n\ntype User = {\n  firstName: string\n  lastName: string\n}\n\nconst formatName = (user: User) => `${user.firstName} ${user.lastName}`\n\nconst getGreeting = (user: User) => {\n  if (user) {\n    return <h1 className=\"greeting\">Hello, {formatName(user)}</h1>\n  }\n  return <h1 className=\"greeting\">Hello, Stranger.</h1>\n}\n\nexport default function JSX() {\n  const user: User = {\n    firstName: 'alan',\n    lastName: 'bae',\n  }\n\n  return getGreeting(user)\n}\n","import React from \"react\";\n\nfunction toCelsius(fahrenheit: number) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius: number) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature: string, convert: (param: number) => number) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\n\nenum TemperatureScale {\n  C = 'Celsius',\n  F = 'Fahrenheit'\n}\n\ntype TemperatureScaleCode = keyof typeof TemperatureScale\n\ninterface ITemperatureInputProps {\n  scale: TemperatureScaleCode\n  temperature: string\n  onTemperatureChange: (temperature: string) => void\n}\n\n// interface ITemperatureInputState {\n//   temperature: string\n// }\n\nclass TemperatureInput extends React.Component<ITemperatureInputProps> {\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // this.setState({\n    //   temperature: e.target.value\n    // })\n\n    this.props.onTemperatureChange(e.target.value)\n  }\n\n  render() {\n    const temperature = this.props.temperature\n    const scale = this.props.scale\n\n    return (\n      <fieldset>\n        <legend>Enter temperature in {TemperatureScale[scale]}:</legend>\n        <input\n          value={temperature}\n          onChange={this.handleChange}\n        />\n      </fieldset>\n    )\n  }\n}\n\nconst BoilingVerdict = (props: { celsius: number }) => (\n  <p>\n    {\n      props.celsius >= 100\n        ? 'The water would boil.'\n        : 'The water would not boil.'\n    }\n  </p>\n)\n\nclass Calculator extends React.Component<{}, { temperature: string; scale: TemperatureScaleCode }> {\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      temperature: '',\n      scale: 'C',\n    }\n  }\n\n  handleCelsiusChange = (temperature: string) => {\n    this.setState({\n      scale: 'C',\n      temperature\n    })\n  }\n\n  handleFahrenheitChange = (temperature: string) => {\n    this.setState({\n      scale: 'F',\n      temperature\n    })\n  }\n\n  // handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   this.setState({\n  //     temperature: e.target.value\n  //   })\n  // }\n\n  render() {\n    const temperature = this.state.temperature\n    const scale = this.state.scale\n\n    const celsius = scale === 'F' ? tryConvert(temperature, toCelsius) : temperature\n    const fahrenheit = scale === 'C' ? tryConvert(temperature, toFahrenheit) : temperature\n\n    return (\n      <div>\n        <TemperatureInput scale={\"C\"} onTemperatureChange={this.handleCelsiusChange} temperature={celsius}/>\n        <TemperatureInput scale={\"F\"} onTemperatureChange={this.handleFahrenheitChange} temperature={fahrenheit}/>\n        <BoilingVerdict celsius={parseFloat(temperature)}/>\n      </div>\n      // <fieldset>\n      //   <legend>Enter temperature in Celsius:</legend>\n      //   <input\n      //     value={temperature}\n      //     onChange={this.handleChange}\n      //   />\n      //   <BoilingVerdict celsius={parseFloat(temperature)}/>\n      // </fieldset>\n    )\n  }\n}\n\nexport default class LiftingStateComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <Calculator/>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\n\ntype WelcomeProps = {\n  name: string\n}\n\nclass Welcome extends React.Component<WelcomeProps> {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>\n  }\n}\n\n\nexport default class ReactComponentClass extends React.Component {\n  render() {\n    return (\n      <div>\n        <Welcome name=\"alan\"/>\n        <Welcome name=\"bae\"/>\n        <Welcome name=\"sangwoo\"/>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\n\ninterface IAvatarProps {\n  user: {\n    avatarUrl: string\n    name: string\n  }\n}\n\nconst Avatar = (props: IAvatarProps) => (\n  <img\n    className=\"Avatar\"\n    src={props.user.avatarUrl}\n    alt={props.user.name}\n  />\n)\n\nconst UserInfo = (props: IAvatarProps) => (\n  <div className=\"UserInfo\">\n    <Avatar user={props.user}/>\n    <div className=\"UserInfo-name\">\n      {props.user.name}\n    </div>\n  </div>\n)\n\ninterface ICommentProps {\n  author: {\n    avatarUrl: string\n    name: string\n  }\n  text: string\n  date: Date\n}\n\nconst Comment = (props: ICommentProps) => (\n  <div className=\"Comment\">\n    <UserInfo user={props.author}/>\n    <div className=\"Comment-text\">\n      {props.text}\n    </div>\n    <div className=\"Comment-date\">\n      {props.date.toLocaleDateString()}\n    </div>\n  </div>\n)\n\nexport default class CommentComponent extends React.Component {\n  render() {\n    const props: ICommentProps = {\n      author: {\n        avatarUrl: 'https://m.media-amazon.com/images/M/MV5BMjM2OTkyNTY3N15BMl5BanBnXkFtZTgwNzgzNDc2NjE@._V1_CR132,0,761,428_AL_UY268_CR82,0,477,268_AL_.jpg',\n        name: 'alan'\n      },\n      text: 'react study',\n      date: new Date(),\n    }\n\n    return <Comment author={props.author} text={props.text} date={props.date}/>\n  }\n}\n","import React from \"react\";\n\ntype ClockState = {\n  date: Date\n}\n\nconst FormattedDate = (props: { date: Date }) => (\n  <h2>It is {props.date.toLocaleTimeString()}</h2>\n)\n\nclass Clock extends React.Component<{}, ClockState> {\n  timerId: NodeJS.Timeout\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      date: new Date()\n    }\n\n    this.timerId = setInterval(\n      () => this.tick(),\n      1000\n    )\n  }\n\n  // 컴포넌트가 Dom에 렌더링 된 후 실행\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => this.tick(),\n      1000\n    )\n  }\n\n  // 컴포넌트가 Dom에서 삭제된 후 실행\n  componentWillUnmount() {\n    clearInterval(this.timerId)\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <FormattedDate date={this.state.date}/>\n      </div>\n    )\n  }\n}\n\nexport default class StateAndLifecycleComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <Clock/>\n        <Clock/>\n        <Clock/>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\n\nclass LoggingButton extends React.Component {\n  handleClick = () => {\n    console.log('this is: ', this)\n  }\n\n  handleClick2() {\n    console.log('2. this is: ', this)\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick}>\n          Click me (Open Console)\n        </button>\n\n        <button onClick={() => this.handleClick2()}>\n          Click me 2 (Open Console)\n        </button>\n      </div>\n    )\n  }\n}\n\ntype ToggleState = {\n  isToggleOn: boolean\n}\n\nclass Toggle extends React.Component<{}, ToggleState> {\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      isToggleOn: true\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }))\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    )\n  }\n}\n\nexport default class EventComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <Toggle/>\n        <LoggingButton/>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\n\nconst WarningBanner = (props: {warn: boolean}) => {\n  if (!props.warn) {\n    return null\n  }\n\n  return (\n    <div className=\"warning\">\n      Warning!\n    </div>\n  )\n}\n\nconst Mailbox = (props: { unreadMessages: Array<string> }) => {\n  const unreadMessages = props.unreadMessages\n  return (\n    <div>\n      <h1>Hello, Mailbox!</h1>\n      {unreadMessages.length > 0 &&\n      <h2>\n        You have {unreadMessages.length} unread messages.\n      </h2>\n      }\n    </div>\n  )\n}\n\nconst UserGreeting = () => <h1>Welcome back!</h1>\n\nconst GuestGreeting = () => <h1>Please sign up.</h1>\n\nconst Greeting = (props: { isLoggedIn: boolean }) => {\n  const isLoggedIn = props.isLoggedIn\n  const component = isLoggedIn\n  ? <UserGreeting/>\n  : <GuestGreeting/>\n\n  return (\n    <div>\n      {component}\n      The user is <b>{isLoggedIn ? 'currently' : 'not'}</b> logged in.\n    </div>\n  )\n}\n\nconst LoginButton = (props: { onClick: () => void }) => (\n  <button onClick={props.onClick}>\n    Login\n  </button>\n)\n\nconst LogoutButton = (props: { onClick: () => void }) => (\n  <button onClick={props.onClick}>\n    Logout\n  </button>\n)\n\ninterface ILoginControlState {\n  isLoggedIn: boolean\n}\n\nclass LoginControl extends React.Component<{}, ILoginControlState> {\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false\n    }\n  }\n\n  handleLoginClick() {\n    this.setState({\n      isLoggedIn: true\n    })\n  }\n\n  handleLogoutClick = () => {\n    this.setState({\n      isLoggedIn: false\n    })\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn\n    const button = isLoggedIn\n      ? <LogoutButton onClick={this.handleLogoutClick}/>\n      : <LoginButton onClick={this.handleLoginClick.bind(this)}/>\n\n    return (\n      <div>\n        <Greeting isLoggedIn={isLoggedIn}/>\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default class ConditionalRenderingComponent extends React.Component {\n  render() {\n    const isWarn = Math.floor(Math.random() * 10) % 2 === 0\n\n    return (\n      <div>\n        <LoginControl/>\n        <hr/>\n        <WarningBanner warn={isWarn}/>\n        <hr/>\n        <Mailbox unreadMessages={['React', 'Re: React', 'Re:Re: React']}/>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\n\ntype PostProps = {\n  id: number\n  title: string\n  content: string\n}\n\nconst Post = (props: PostProps) => (\n  <div key={props.id}>\n    <h3>{props.title}</h3>\n    <p>{props.content}</p>\n  </div>\n)\n\nclass Blog extends React.Component<{ posts: Array<PostProps> }> {\n  render() {\n    const sidebar = (\n      <ul>\n        {this.props.posts.map(post =>\n          <li key={post.id}>\n            {post.title}\n          </li>\n        )}\n      </ul>\n    )\n\n    const contents = this.props.posts.map(post => (\n      <Post key={post.id} id={post.id} title={post.title} content={post.content}/>\n    ))\n\n    return (\n      <div>\n        {sidebar}\n        {contents}\n      </div>\n    )\n  }\n}\n\nconst NumberListItem = (props: { value: number }) => <li>{props.value}</li>\n\nconst NumberList = (props: { numbers: Array<number> }) => (\n  <ul>\n    {\n      props.numbers.map(number => (\n        <NumberListItem value={number} key={number.toString()}/>\n      ))\n    }\n  </ul>\n)\n\nexport default class ListAndKeyComponent extends React.Component {\n  render() {\n    const numbers = [1, 2, 3, 4, 5]\n    const posts = [\n      {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n      {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n    ]\n\n    return (\n      <div>\n        <NumberList numbers={numbers}/>\n        <Blog posts={posts}/>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\n\ntype ReservationState = {\n  isGoing: boolean\n  numberOfGuests: number\n}\n\nclass Reservation extends React.Component<{}, ReservationState> {\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n\n    console.log(name, value)\n\n    // @ts-ignore\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    return (\n      <form>\n        <label>\n          Is going:\n          <input\n            name=\"isGoing\"\n            type=\"checkbox\"\n            checked={this.state.isGoing}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <br/>\n        <label>\n          Number of guests:\n          <input\n            name=\"numberOfGuests\"\n            type=\"number\"\n            value={this.state.numberOfGuests}\n            onChange={this.handleInputChange}\n          />\n        </label>\n      </form>\n    )\n  }\n}\n\ninterface IFlavorFormState {\n  value: string\n  multipleValues: Array<string>\n}\n\nclass FlavorForm extends React.Component<{}, IFlavorFormState> {\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      value: 'coconut',\n      multipleValues: []\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    this.setState({\n      value: event.target.value\n    })\n  }\n\n  handleChangeMultiple = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    console.log(event.target.value)\n  }\n\n  handleSubmit = (event: React.FormEvent) => {\n    alert(`Your favorite flavor is: ${this.state.value}`)\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick user favorite flavor:\n          <select value={this.state.value} onChange={this.handleChange}>\n            <option value=\"grapefruit\">Grapefruit</option>\n            <option value=\"lime\">Lime</option>\n            <option value=\"coconut\">Coconut</option>\n            <option value=\"mango\">Mango</option>\n          </select>\n          <h1>{this.state.value}</h1>\n        </label>\n\n        <label>\n          Pick user favorite flavors:\n          <select multiple={true} value={['grapefruit', 'lime']} onChange={this.handleChangeMultiple}>\n            <option value=\"grapefruit\">Grapefruit</option>\n            <option value=\"lime\">Lime</option>\n            <option value=\"coconut\">Coconut</option>\n            <option value=\"mango\">Mango</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    )\n  }\n}\n\nexport default class FormComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <FlavorForm/>\n        <hr/>\n        <Reservation/>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\n\nconst SplitPane = (props: { left: React.ReactNode; right: React.ReactNode }) => (\n  <div className=\"SplitPane\">\n    <div className=\"SplitPane-Left\">\n      {props.left}\n    </div>\n    <div className=\"SplitPane-Right\">\n      {props.right}\n    </div>\n  </div>\n)\n\nconst Contract = () => <h1>Contract</h1>\nconst Chat = () => <h1>Chat</h1>\n\nconst Pane = () => (\n  <SplitPane\n    left={<Contract/>}\n    right={<Chat/>}\n  />\n)\n\nconst FancyBoard = (props: { children: React.ReactNode; color: string }) => (\n  <div className={`FancyBorder FancyBorder-${props.color}`}>\n    {props.children}\n  </div>\n)\n\nconst WelcomeDialog = () => (\n  <FancyBoard color=\"blue\">\n    <h1 className=\"Dialog-title\">Welcome</h1>\n    <p className=\"Dialog-message\">\n      Thank you for visiting our spacecraft!\n    </p>\n  </FancyBoard>\n)\n\nconst Dialog = (props: {title: string; message: string; children: React.ReactNode}) => (\n  <FancyBoard color=\"red\">\n    <h1 className=\"Dialog-title\">\n      {props.title}\n    </h1>\n    <p className=\"Dialog-message\">\n      {props.message}\n    </p>\n    {props.children}\n  </FancyBoard>\n)\n\nclass SignUpDialog extends React.Component<{}, { login: string }> {\n\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      login: ''\n    }\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({login: e.target.value})\n  }\n\n  handleSignUp = () => {\n    if (this.state.login.length > 0) {\n      alert(`Welcome aboard, ${this.state.login}!`)\n    }\n  }\n\n  render() {\n    return (\n      <Dialog\n        title=\"Mars exploration Program\"\n        message=\"How should we refer to you?\"\n      >\n        <input\n          value={this.state.login}\n          onChange={this.handleChange}\n        />\n        <button onClick={this.handleSignUp} disabled={this.state.login.length < 1}>Sign Me Up!</button>\n      </Dialog>\n    )\n  }\n}\n\nexport default class CompositionVsInheritanceComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <WelcomeDialog/>\n        <hr/>\n        <Pane/>\n        <hr/>\n        <SignUpDialog/>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Home from \"./components/Home\";\nimport HelloWorld from \"./components/HelloWorld\";\nimport JSX from \"./components/JSX\"\nimport ReactComponentClass from \"./components/ReactComponentClass\";\nimport CommentComponent from \"./components/CommentComponent\";\nimport StateAndLifecycleComponent from \"./components/StateAndLifecycleComponent\";\nimport EventComponent from \"./components/EventComponent\";\nimport ConditionalRenderingComponent from \"./components/ConditionalRenderingComponent\";\nimport ListAndKeyComponent from \"./components/ListAndKeyComponent\";\nimport FormComponent from \"./components/FormComponent\";\nimport LiftingStateComponent from \"./components/LiftingStateComponent\";\nimport CompositionVsInheritanceComponent from \"./components/CompositionVsInheritanceComponent\";\n\ninterface IMenu {\n  path: string\n  name: string\n  component: React.ComponentType\n}\n\nfunction App() {\n  const menus: Array<IMenu> = [\n    {path: '/', name: 'Home', component: Home},\n    {path: '/hello-world', name: 'Hello World', component: HelloWorld},\n    {path: '/jsx', name: 'JSX 소개', component: JSX},\n    {path: '/react-component-class', name: 'Component와 Props', component: ReactComponentClass},\n    {path: '/comment', name: 'Comment 분리하기', component: CommentComponent},\n    {path: '/state-and-lifecycle', name: 'State와 생명주기', component: StateAndLifecycleComponent},\n    {path: '/event', name: '이벤트 처리하기', component: EventComponent},\n    {path: '/conditional-rendering', name: '조건부 렌더링', component: ConditionalRenderingComponent},\n    {path: '/list-and-key', name: '라스트와 key', component: ListAndKeyComponent},\n    {path: '/form', name: '폼', component: FormComponent},\n    {path: '/lifting-state', name: 'State 끌어올리기', component: LiftingStateComponent},\n    {path: '/composition-vs-inheritance', name: '합성 vs 상속', component: CompositionVsInheritanceComponent},\n  ]\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <nav className=\"App-header\">\n          <img src={logo} alt=\"logo\" className=\"App-logo\"/>\n          <ul>\n            {\n              menus.map(menu => (\n                <li key={menu.name}>\n                  <Link to={menu.path} className=\"Ap p-link\">{menu.name}</Link>\n                </li>\n              ))\n            }\n          </ul>\n        </nav>\n\n        <Switch>\n          {\n            menus.map(menu => (\n              <Route exact path={menu.path} component={menu.component} key={menu.name}/>\n            ))\n          }\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}